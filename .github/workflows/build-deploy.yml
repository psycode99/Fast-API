name: Build and Deploy Code

on:
  push:
  pull_request:

jobs:
  job1:
    runs-on: ubuntu-latest
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Pulling git repo
        uses: actions/checkout@v2
      - name: Install Python version 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.4'
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Installing dependencies
        run: pip install -r requirements.txt
      - name: Create Database
        run: |
          psql -h localhost -U ${{ secrets.DATABASE_USERNAME }} -p ${{ secrets.DATABASE_PORT }} -c "CREATE DATABASE ${{ secrets.DATABASE_NAME }}"
      - name: Set up pytest
        run: |
          pip install pytest
          pytest
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
