name: Build and Deploy Code

on: [push, pull_request]


jobs: 
    job1: 
        environment: 
            name: testing
        env: 
            DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}  # Assuming PostgreSQL service name is "postgres"
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

        services: 
           postgres: 
            image: postgres 
            env:
                POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                POSTGRES_DB: ${{secrets.DATABASE_NAME}}
              # Set health checks to wait until postgres has started
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
            ports:
            # Maps tcp port 5432 on service container to the host
                - 5432:5432
        runs-on: ubuntu-latest
        steps: 
            - name: pulling git repo
              uses: actions/checkout@v2
            - name: install python version 3.11
              uses: actions/setup-python@v5
              with: 
                python-version: '3.11'
            - name: update pip
              run: python -m pip install --upgrade pip
            - name: installing dependencies
              run: pip install -r requirements.txt
            - name: set up pytest
              run: |
                pip install pytest
                pytest